[{"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\index.js":"1","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\App.js":"2","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\reportWebVitals.js":"3","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\redux-store.js":"4","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\common\\Preloader\\Preloader.js":"5","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\News\\News.jsx":"7","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Music\\Music.jsx":"8","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Settings\\Settings.jsx":"9","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Friends\\Friends.jsx":"10","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\DialogsContainer.jsx":"11","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileCountainer.jsx":"12","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Users\\UsersContainer.jsx":"13","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Heder\\HeaderContainer.jsx":"14","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\login\\login.jsx":"15","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\api\\api.js":"16","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\utils\\validators\\obiect-helpers.js":"17","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\user-selectors.js":"18","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\utils\\validators\\validators.js":"19","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\common\\FormsControls\\FormsControls.js":"20","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\hoc\\withAuthRedirect.js":"21","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\Dialogs.jsx":"22","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Users\\Users.jsx":"23","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Heder\\Header.jsx":"24","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\Profile.jsx":"25","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Users\\User.jsx":"26","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\Message\\Message.jsx":"27","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"28","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\MyPost\\MyPostContainer.jsx":"29","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\MyPost\\MyPost.jsx":"30","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"31","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"32","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"33","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\MyPost\\Post\\Post.jsx":"34","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\app-reducer.ts":"35","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\auth-reduser.ts":"36","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\Post-reducer.ts":"37","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\Message-reducer.ts":"38","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\Users-reducer.ts":"39","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\common\\Paginator\\Paginator.tsx":"40"},{"size":1003,"mtime":1611163884672,"results":"41","hashOfConfig":"42"},{"size":1907,"mtime":1611163884581,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1611163884685,"results":"44","hashOfConfig":"42"},{"size":666,"mtime":1611163884682,"results":"45","hashOfConfig":"42"},{"size":157,"mtime":1611163884667,"results":"46","hashOfConfig":"42"},{"size":888,"mtime":1611163884608,"results":"47","hashOfConfig":"42"},{"size":120,"mtime":1611163884612,"results":"48","hashOfConfig":"42"},{"size":119,"mtime":1611163884606,"results":"49","hashOfConfig":"42"},{"size":131,"mtime":1611163884653,"results":"50","hashOfConfig":"42"},{"size":127,"mtime":1611163884601,"results":"51","hashOfConfig":"42"},{"size":628,"mtime":1611163884598,"results":"52","hashOfConfig":"42"},{"size":1525,"mtime":1611163884622,"results":"53","hashOfConfig":"42"},{"size":1664,"mtime":1611163884657,"results":"54","hashOfConfig":"42"},{"size":436,"mtime":1611163884605,"results":"55","hashOfConfig":"42"},{"size":1906,"mtime":1611163884669,"results":"56","hashOfConfig":"42"},{"size":1861,"mtime":1611163884583,"results":"57","hashOfConfig":"42"},{"size":229,"mtime":1611163884687,"results":"58","hashOfConfig":"42"},{"size":683,"mtime":1611163884684,"results":"59","hashOfConfig":"42"},{"size":274,"mtime":1611163884688,"results":"60","hashOfConfig":"42"},{"size":1069,"mtime":1611163884661,"results":"61","hashOfConfig":"42"},{"size":570,"mtime":1611163884670,"results":"62","hashOfConfig":"42"},{"size":1582,"mtime":1611163884596,"results":"63","hashOfConfig":"42"},{"size":578,"mtime":1611163884656,"results":"64","hashOfConfig":"42"},{"size":544,"mtime":1611163884603,"results":"65","hashOfConfig":"42"},{"size":496,"mtime":1611163884620,"results":"66","hashOfConfig":"42"},{"size":1292,"mtime":1611163884655,"results":"67","hashOfConfig":"42"},{"size":178,"mtime":1611163884600,"results":"68","hashOfConfig":"42"},{"size":2724,"mtime":1611163884648,"results":"69","hashOfConfig":"42"},{"size":419,"mtime":1611163884617,"results":"70","hashOfConfig":"42"},{"size":1213,"mtime":1611163884615,"results":"71","hashOfConfig":"42"},{"size":297,"mtime":1611163884595,"results":"72","hashOfConfig":"42"},{"size":867,"mtime":1611163884652,"results":"73","hashOfConfig":"42"},{"size":1381,"mtime":1611163884647,"results":"74","hashOfConfig":"42"},{"size":241,"mtime":1611163884618,"results":"75","hashOfConfig":"42"},{"size":836,"mtime":1611239062766,"results":"76","hashOfConfig":"42"},{"size":2750,"mtime":1611253029774,"results":"77","hashOfConfig":"42"},{"size":3379,"mtime":1611317374599,"results":"78","hashOfConfig":"42"},{"size":1009,"mtime":1611255121970,"results":"79","hashOfConfig":"42"},{"size":3978,"mtime":1611319192384,"results":"80","hashOfConfig":"42"},{"size":1615,"mtime":1611325985137,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"19qipll",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"167"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"167"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\index.js",[],["180","181"],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\App.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\reportWebVitals.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\redux-store.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\common\\Preloader\\Preloader.js",["182"],"import preloader from \"../../../assets/images/loading.gif\"\r\n\r\nlet Preloader = (props)=>{\r\n    return  <img src = {preloader}/> \r\n}\r\nexport default Preloader;","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\News\\News.jsx",["183"],"import  b from './News.module.css'\r\n\r\nconst News = () => {\r\n   \r\n   return <div>News</div>\r\n}\r\n\r\nexport default  News;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Music\\Music.jsx",["184"],"import  b from './Music.module.css'\r\n\r\nconst Music = () => {\r\n   return <div>Music</div>\r\n}\r\n\r\nexport default  Music;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Settings\\Settings.jsx",["185"],"import  b from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n   return <div>Settings</div>\r\n}\r\n\r\nexport default  Settings;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Friends\\Friends.jsx",["186"],"import  b from './Friends.module.css'\r\n\r\nconst Friends = () => {\r\n   return <div>Friends</div>\r\n}\r\n\r\nexport default  Friends;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\DialogsContainer.jsx",["187"],"\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet f1 =(store)=>{\r\n return {\r\n  messagesData:store.allMessages.messagesData,\r\n  dialogsData:store.allMessages.dialogsData,\r\n  newMessageBody:store.allMessages.newMessageBody,\r\n  \r\n}\r\n}\r\nlet f2 =(dispatch)=>{\r\nreturn {\r\n  onSendMessageClick: (newMessageBody)=>{ dispatch({type:'SEND-MESSAGE', newMessageBody})}\r\n}\r\n}\r\n\r\n\r\n\r\nexport default  compose(\r\n  connect(f1,f2),\r\n  withAuthRedirect\r\n  )(Dialogs);\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileCountainer.jsx",["188","189"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile } from '../../redux/Post-reducer';\r\nimport Profile from './Profile'\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileCountainer extends React.Component {\r\n    refreshProfile(){\r\n        let userId =this.props.match.params.userId;\r\n        if(!userId){ \r\n            userId = this.props.authorizeuserId;\r\n            if(!userId){this.props.history.push(\"/login\")}\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)  \r\n    }\r\n    componentDidMount(){\r\n       this.refreshProfile();   \r\n    }\r\n    componentDidUpdate(prevProps,prevState, snapshot){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile()}\r\n    }\r\n\r\n   render(){\r\n   \r\n    return <Profile {...this.props} \r\n    profile={this.props.profile} \r\n    status= {this.props.status}\r\n    updateStatus={this.props.updateStatus}\r\n    isOwner={!this.props.match.params.userId}\r\n    savePhoto={this.props.savePhoto}/>\r\n   \r\n}\r\n}\r\n\r\nlet f2 = (state) => ({\r\n    profile: state.allPosts.profile,\r\n    status: state.allPosts.status,\r\n    authorizeuserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n\r\nexport default  compose(\r\n    connect(f2, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n     \r\n)(ProfileCountainer);\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Users\\UsersContainer.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Heder\\HeaderContainer.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\login\\login.jsx",["190"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport { login } from \"../../redux/auth-reduser\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props)=>{\r\n    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field placeholder={\"email\"}  name={\"email\"} component={Input} validate={required}/>\r\n            </div>\r\n            <div>\r\n            <Field placeholder={\"Password\"} name={\"Password\"} component={Input} validate={required}/>       \r\n            </div>\r\n            <div>\r\n            <Field type = {\"checkbox\"} name={\"rememderMe\"} component={Input} /> rememder me\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl}/> }\r\n            {props.captchaUrl && createField(\"Symbols from image\",\"captcha\",[required], Input, {})}\r\n            {props.error && <div className={style.formSummaryError}>\r\n             {props.error}\r\n            </div>}\r\n            <div>\r\n            <button>login</button>\r\n            </div>\r\n        </form>)\r\n        \r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props)=>{\r\n    const on = (param) =>{\r\n    props.login(param.email, param.password, param.rememderMe, param.captcha);    \r\n    }\r\nif(props.isAuth){\r\n    return <Redirect to={\"/profile\"} />\r\n}\r\n\r\n   return <div>\r\n    <h1>Login</h1> \r\n    <LoginReduxForm  onSubmit={on} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state)=> ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\api\\api.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\utils\\validators\\obiect-helpers.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\user-selectors.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\utils\\validators\\validators.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\common\\FormsControls\\FormsControls.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Users\\Users.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Heder\\Header.jsx",["191"],"import { NavLink } from 'react-router-dom'\r\nimport  b from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n    return <header className={b.header}>\r\n    <img src=\"https://www.clipartmax.com/png/full/220-2205004_gallery-of-free-logo-maker-design-with-jeta-software-free-3d-logo.png\" />\r\n  <div className ={b.loginBlock}>\r\n      {props.isAuth \r\n      ?<div>{props.login} - <button onClick={props.logout}>log out</button> </div>\r\n      :<NavLink to={\"/login\"}>Login</NavLink> }\r\n      \r\n  </div>\r\n   </header>\r\n}\r\n\r\nexport default  Header;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\Profile.jsx",["192","193"],"import MyPost from './MyPost/MyPost'\r\nimport MyPostContainer from './MyPost/MyPostContainer'\r\nimport  a from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n   \r\n    return <div>\r\n   <ProfileInfo isOwner={props.isOwner} profile = {props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n  <MyPostContainer />\r\n      </div>\r\n}\r\n\r\nexport default  Profile;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Users\\User.jsx",["194"],"import styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/User.png\";\r\nimport React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    let u = props.user;\r\n    return <div>\r\n    <span>\r\n            <div>\r\n                <NavLink to = {'/profile/' + u.id}>\r\n             <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userfoto}/>     \r\n             </NavLink> \r\n                 </div>\r\n                 <div>\r\n        {u.followed ? \r\n        <button disabled={props.followingInProgress.some(id =>id === u.id)} \r\n        onClick={()=> {props.unfollow(u.id);         \r\n        }}>UnFollow</button> \r\n        : <button disabled={props.followingInProgress.some(id =>id === u.id)} \r\n        onClick={()=> {props.follow(u.id)\r\n        } }>Follow</button>}  \r\n                 </div>\r\n             </span>\r\n             <span>\r\n                 <span>\r\n         <div>{u.name}</div>\r\n         <div>{u.status}</div> \r\n                 </span>\r\n                 <span>\r\n                 <div>{\"u.location.country\"}</div>\r\n                 <div>{\"u.location.city\"}</div>\r\n                     \r\n                 </span>\r\n             </span>\r\n         </div>\r\n    \r\n   } \r\n\r\n\r\n\r\n export default User;","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["195"],"\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport a from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/User.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport {useState} from 'react';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditmode] = useState(false);\r\n\r\n  if (!props.profile) {//если нет профайла то отрисуй без него перезагрузку\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n      if (e.target.files.length) {\r\n        props.savePhoto(e.target.files[0]);\r\n      }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(\r\n   ()=> { setEditmode(false)})\r\n  }\r\n  \r\n  return   (  \r\n  <div>\r\n      <div className = {a.descriptionBlock}>\r\n          <img src={props.profile.photos.large || userPhoto} className ={a.mainPhoto} />\r\n          {/*если фото пришло с сервака то покажи его или покажи нашу заглушку user.png*/}\r\n          {props.isOwner && <input type = {'file'} onChange={onMainPhotoSelected} />}\r\n\r\n          {editMode \r\n            ? <ProfileDataFormReduxForm initialValues = {props.profile} profile = {props.profile} onSubmit = {onSubmit}/> \r\n            : <ProfileData goToEditMode ={() => { setEditmode(true)}} profile = {props.profile} isOwner = {props.isOwner}/> }\r\n          \r\n          <ProfileStatusWithHooks status = {props.status} updateStatus ={props.updateStatus} />\r\n      </div>\r\n</div> \r\n  );\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={a.contact}><b>{contactTitle}</b> : {contactValue}</div>\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n  return <div>\r\n            { props.isOwner && <div><button onClick = {props.goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full name</b> : {props.profile.fullName}\r\n            </div>\r\n             <div>\r\n                <b>Looking for a job</b> : {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n          <div>\r\n              <b>About me</b> : {props.profile.aboutMe}\r\n          </div>\r\n          <div>\r\n              <b>Contacts</b> : {Object.keys(props.profile.contacts).map(key => {\r\n              return <Contact key={key} contactTitle = {key} contactValue = {props.profile.contacts[key] }/>\r\n              })}\r\n          </div>\r\n  </div>\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\MyPost\\MyPostContainer.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\MyPost\\MyPost.jsx",["196"],"import  a from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n  let v = React.createRef();\r\n\r\n \r\n  let addPost = (values) => {props.addPost(values.newPostText)};\r\n  \r\n\r\nlet postsElements = props.PostData.map(e=><Post key={e.id} message={e.message} like={e.likesCount}/>)\r\n    return <div className={a.postsBlock}>\r\n    <h3>My posts</h3>\r\n    <AddNewPostFormRedux onSubmit={addPost}/> \r\n    <div className={a.posts}>\r\n     {postsElements}\r\n    </div>\r\n  </div>\r\n      \r\n} \r\n)\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst AddNewPostForm = (props)=>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}> \r\n      <div> <Field component={Textarea} name=\"newPostText\" validate={[required,maxLength10]}  placeholder={\"Post message\"}/> </div>    \r\n    <div><button>Add post</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n\r\nexport default  MyPost;\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\Profile\\MyPost\\Post\\Post.jsx",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\app-reducer.ts",["197"],"import { getAuthUserData } from \"./auth-reduser\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nexport type initialStateType = {\r\n  initialized: boolean\r\n}\r\n\r\nlet initialState:initialStateType =  {\r\n    initialized: false\r\n  };\r\n  \r\n  \r\n  const appReducer = (state = initialState, action: any):initialStateType =>{\r\n  \r\n  \r\n    if (action.type == SET_INITIALIZED){\r\n      return {...state, initialized: true}\r\n    } \r\n  \r\n  return state\r\n        \r\n      }\r\n\r\n type setInitializedActionType = {\r\n   type: typeof SET_INITIALIZED\r\n }     \r\n\r\nexport const setInitialized = ():setInitializedActionType => ({type: SET_INITIALIZED})\r\n\r\nexport const initializeApp = ()=>(dispatch: any)=>{\r\n  let promise = dispatch(getAuthUserData())\r\n  Promise.all([promise]).then( () => {dispatch(setInitialized())}\r\n  )\r\n}\r\n export default appReducer;\r\n\r\n",["198","199"],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\auth-reduser.ts",["200","201"],"import { authAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\"\r\nconst SET_USER_DATA = \"samurai-networt/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\";\r\n\r\n\r\n\r\nlet initialState =  {\r\n    userId:null as number | null,\r\n    email:null as string | null,\r\n    login:null as string | null,\r\n    isAuth: false ,\r\n    captchaUrl: null as string | null\r\n  };\r\n  \r\n  export type InitialStateType = typeof initialState \r\n\r\n  const authReducer = (state = initialState, action: any):InitialStateType=>{\r\n  \r\n  \r\n    if (action.type == SET_USER_DATA){\r\n      return {...state, ...action.payload }\r\n    } \r\n    if (action.type == GET_CAPTCHA_URL_SUCCESS){\r\n      return {...state, ...action.payload }\r\n    } \r\n  \r\n  return state\r\n        \r\n      }\r\n\r\ntype SetAuthUserDataActionPayloadType ={\r\n  userId: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean\r\n}\r\n\r\ntype SetAuthUserDataActionType = {\r\n  type: typeof SET_USER_DATA, \r\n  payload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\ntype getCaptchaUrlSuccessActionType = {\r\n  type: typeof GET_CAPTCHA_URL_SUCCESS\r\n  payload: {url: string}\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => ({type: SET_USER_DATA, payload: {userId,email,login,isAuth}})\r\nexport const getCaptchaUrlSuccess  = (url: string):getCaptchaUrlSuccessActionType => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {url}})\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n let response = await authAPI.me()\r\n  \r\n  if (response.data.resultCode === 0){\r\n      let {id, login, email} = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n \r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string )=> async (dispatch:any)=>{\r\n \r\n  let response = await authAPI.login(email, password, rememberMe, captcha)\r\n  \r\n  if (response.data.resultCode === 0){\r\n      dispatch(getAuthUserData())\r\n  }else{\r\n    if(response.data.resultCode ===10){\r\n      dispatch(getCaptchaUrl())\r\n    }\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0]:\"Some error\"\r\n    dispatch(stopSubmit(\"login\", {_error:message}));\r\n  }\r\n}\r\nexport const logout = ()=> async (dispatch: any)=>{\r\n  let response = await authAPI.logout()\r\n  if (response.data.resultCode === 0){\r\n      dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\nexport const getCaptchaUrl = ()=> async (dispatch: any)=>{\r\n  let response = await securityAPI.getCaptchaUrl()\r\n const captchaUrl = response.data.url;\r\n dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\n\r\n      export default authReducer;\r\n     ","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\Post-reducer.ts",["202"],"import { PostDataType, profileType, ContactsType, PhotosType } from './../types/types';\r\nimport { profileAPI, userAPI } from \"../api/api\";\r\nimport { stopSubmit} from \"redux-form\"\r\n\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\"\r\n\r\n\r\n\r\n\r\nlet initialState =  {\r\n    PostData:[\r\n    { id:1, message:\"hi, how are you ?\",likesCount: 12}, \r\n    { id:2, message:\" Ok\",likesCount: 17},  \r\n    { id:3, message:\"hi\",likesCount: 12},  \r\n    { id:4, message:\"hi\",likesCount: 12},    \r\n  ] as Array<PostDataType>, \r\nprofile: null as profileType | null,\r\nstatus:\"\",\r\nnewPostText: \"\"\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\nconst postReducer = (state = initialState, action: any):InitialStateType=>{\r\n\r\n    if(action.type === 'ADD-POST'){\r\n        let newPost = {\r\n            id: 5,\r\n            message: action.newPostText,\r\n            likesCount:0\r\n        };\r\n        let stateCopy = {...state};\r\n        stateCopy.PostData = [...state.PostData];\r\n        stateCopy.PostData.push(newPost);\r\n        stateCopy.newPostText = \"\";\r\n        return stateCopy;\r\n       \r\n      }\r\n      if (action.type === SET_USER_PROFILE){\r\n       \r\n       return {...state, profile: action.profile};\r\n     }\r\n     if (action.type === SET_STATUS){\r\n       \r\n      return {...state, status: action.status};\r\n    }\r\n    if (action.type === SAVE_PHOTO_SUCCESS){\r\n       \r\n      return {...state, profile: {...state.profile, photos: action.photos} as profileType };\r\n    }\r\n      return state;\r\n    }\r\n\r\n\r\n\r\n\r\nexport const setUserProfile = (profile: profileType):setUserProfileType =>({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status: string):setStatusType =>({type: SET_STATUS, status})\r\nexport const savePhotoSuccess=(photos: PhotosType):savePhotoSuccessType =>({type: SAVE_PHOTO_SUCCESS,photos})\r\n\r\ntype setUserProfileType = {\r\n  type: typeof SET_USER_PROFILE\r\n  profile: profileType\r\n}\r\ntype setStatusType = {\r\n  type: typeof SET_STATUS\r\n  status: string\r\n}\r\ntype savePhotoSuccessType = {\r\n  type: typeof SAVE_PHOTO_SUCCESS\r\n  photos: PhotosType\r\n}\r\n\r\n\r\nexport const getUserProfile = (userId: number)=> async (dispatch: any) =>{\r\n let response = await userAPI.getProfile(userId)\r\n  dispatch(setUserProfile(response.data));            \r\n}\r\nexport const getStatus= (userId: number)=> async (dispatch: any) =>{\r\n  let response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data));          \r\n}\r\nexport const updateStatus= (status: string)=> async (dispatch: any) =>{\r\n  let response = await profileAPI.updateStatus(status)\r\nif(response.data.resultCode === 0){\r\ndispatch(setStatus(status)); \r\n}\r\n}\r\nexport const savePhoto = (file: any)=> async (dispatch: any) =>{\r\n  let response = await profileAPI.savePhoto(file)\r\nif(response.data.resultCode === 0){\r\ndispatch(savePhotoSuccess(response.data.data.photos)); \r\n}\r\n}\r\nexport const saveProfile = (profile: profileType)=> async (dispatch: any, getState: any) =>{\r\nconst userId = getState().auth.userId;\r\nlet response = await profileAPI.saveProfile(profile)\r\nif(response.data.resultCode === 0){\r\n dispatch(getUserProfile(userId));\r\n} else {\r\ndispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\nreturn Promise.reject(response.data.messages[0])\r\n}\r\n}\r\n\r\n\r\n    export default postReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\Message-reducer.ts",[],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\redux\\Users-reducer.ts",["203","204","205","206","207","208","209","210"],"C:\\Users\\Александр\\Desktop\\xz\\social-network\\src\\components\\common\\Paginator\\Paginator.tsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":4,"column":13,"nodeType":"217","endLine":4,"endColumn":37},{"ruleId":"218","severity":1,"message":"219","line":1,"column":9,"nodeType":"220","messageId":"221","endLine":1,"endColumn":10},{"ruleId":"218","severity":1,"message":"219","line":1,"column":9,"nodeType":"220","messageId":"221","endLine":1,"endColumn":10},{"ruleId":"218","severity":1,"message":"219","line":1,"column":9,"nodeType":"220","messageId":"221","endLine":1,"endColumn":10},{"ruleId":"218","severity":1,"message":"219","line":1,"column":9,"nodeType":"220","messageId":"221","endLine":1,"endColumn":10},{"ruleId":"218","severity":1,"message":"222","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":18},{"ruleId":"218","severity":1,"message":"222","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":25,"column":43,"nodeType":"225","messageId":"226","endLine":25,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":23,"column":34,"nodeType":"217","endLine":23,"endColumn":63},{"ruleId":"215","severity":1,"message":"216","line":6,"column":5,"nodeType":"217","endLine":6,"endColumn":136},{"ruleId":"218","severity":1,"message":"227","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":14},{"ruleId":"218","severity":1,"message":"228","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":10},{"ruleId":"215","severity":1,"message":"216","line":12,"column":14,"nodeType":"217","endLine":12,"endColumn":106},{"ruleId":"215","severity":1,"message":"216","line":30,"column":11,"nodeType":"217","endLine":30,"endColumn":89},{"ruleId":"218","severity":1,"message":"229","line":12,"column":7,"nodeType":"220","messageId":"221","endLine":12,"endColumn":8},{"ruleId":"223","severity":1,"message":"230","line":17,"column":21,"nodeType":"225","messageId":"226","endLine":17,"endColumn":23},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"223","severity":1,"message":"230","line":21,"column":21,"nodeType":"225","messageId":"226","endLine":21,"endColumn":23},{"ruleId":"223","severity":1,"message":"230","line":24,"column":21,"nodeType":"225","messageId":"226","endLine":24,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":1,"column":37,"nodeType":"220","messageId":"221","endLine":1,"endColumn":49},{"ruleId":"223","severity":1,"message":"230","line":23,"column":19,"nodeType":"225","messageId":"226","endLine":23,"endColumn":21},{"ruleId":"223","severity":1,"message":"230","line":27,"column":19,"nodeType":"225","messageId":"226","endLine":27,"endColumn":21},{"ruleId":"223","severity":1,"message":"230","line":31,"column":19,"nodeType":"225","messageId":"226","endLine":31,"endColumn":21},{"ruleId":"223","severity":1,"message":"230","line":36,"column":17,"nodeType":"225","messageId":"226","endLine":36,"endColumn":19},{"ruleId":"223","severity":1,"message":"230","line":40,"column":17,"nodeType":"225","messageId":"226","endLine":40,"endColumn":19},{"ruleId":"223","severity":1,"message":"230","line":43,"column":17,"nodeType":"225","messageId":"226","endLine":43,"endColumn":19},{"ruleId":"223","severity":1,"message":"230","line":46,"column":17,"nodeType":"225","messageId":"226","endLine":46,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":49,"column":49,"nodeType":"225","messageId":"226","endLine":49,"endColumn":51},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'b' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'MyPost' is defined but never used.","'a' is defined but never used.","'v' is assigned a value but never used.","Expected '===' and instead saw '=='.","@typescript-eslint/no-unused-vars","'ContactsType' is defined but never used.","no-global-assign","no-unsafe-negation"]